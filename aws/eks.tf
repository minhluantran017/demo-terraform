module "vpc" {
    source  = "terraform-aws-modules/vpc/aws"
    version = "2.6.0"
    create_vpc = var.create_eks
  
    name                 = "training-vpc"
    cidr                 = "10.0.0.0/16"
    azs                  = data.aws_availability_zones.available.names
    private_subnets      = ["10.0.1.0/24", "10.0.2.0/24", "10.0.3.0/24"]
    public_subnets       = ["10.0.4.0/24", "10.0.5.0/24", "10.0.6.0/24"]
    enable_nat_gateway   = true
    single_nat_gateway   = true
    enable_dns_hostnames = true
  
    tags = {
      "kubernetes.io/cluster/${local.cluster_name}" = "shared"
    }
  
    public_subnet_tags = {
      "kubernetes.io/cluster/${local.cluster_name}" = "shared"
      "kubernetes.io/role/elb"                      = "1"
    }
  
    private_subnet_tags = {
      "kubernetes.io/cluster/${local.cluster_name}" = "shared"
      "kubernetes.io/role/internal-elb"             = "1"
    }
}


resource "aws_security_group" "worker_group_mgmt_one" {
    name_prefix = "worker_group_mgmt_one"
    vpc_id      = module.vpc.vpc_id
    count       = var.create_eks ? 1 : 0

    ingress {
        from_port = 22
        to_port   = 22
        protocol  = "tcp"

        cidr_blocks = [
        "10.0.0.0/8",
        ]
    }
}

resource "aws_security_group" "worker_group_mgmt_two" {
    name_prefix = "worker_group_mgmt_two"
    vpc_id      = module.vpc.vpc_id
    count       = var.create_eks ? 1 : 0

    ingress {
        from_port = 22
        to_port   = 22
        protocol  = "tcp"

        cidr_blocks = [
        "192.168.0.0/16",
        ]
    }
}

resource "aws_security_group" "all_worker_mgmt" {
    name_prefix = "all_worker_management"
    vpc_id      = module.vpc.vpc_id
    count       = var.create_eks ? 1 : 0

    ingress {
        from_port = 22
        to_port   = 22
        protocol  = "tcp"

        cidr_blocks = [
        "10.0.0.0/8",
        "172.16.0.0/12",
        "192.168.0.0/16",
        ]
    }
}

module "eks" {
    source       = "terraform-aws-modules/eks/aws"
    cluster_name = local.cluster_name
    subnets      = module.vpc.private_subnets
    create_eks   = var.create_eks
  
    tags = {
        Environment = "training"
        GithubRepo  = "terraform-aws-eks"
        GithubOrg   = "terraform-aws-modules"
    }

    vpc_id = module.vpc.vpc_id

    worker_groups = [
        {
            name                          = "worker-group-1"
            instance_type                 = "t2.small"
            additional_userdata           = "echo foo bar"
            asg_desired_capacity          = 2
            additional_security_group_ids = [aws_security_group.worker_group_mgmt_one.id]
        },
        {
            name                          = "worker-group-2"
            instance_type                 = "t2.medium"
            additional_userdata           = "echo foo bar"
            additional_security_group_ids = [aws_security_group.worker_group_mgmt_two.id]
            asg_desired_capacity          = 1
        },
    ]
}

data "aws_eks_cluster" "cluster" {
    name = module.eks.cluster_id
    count = var.create_eks ? 1 : 0
}

data "aws_eks_cluster_auth" "cluster" {
    name = module.eks.cluster_id
    count = var.create_eks ? 1 : 0
}

output "cluster_endpoint" {
    description = "Endpoint for EKS control plane."
    value       = module.eks.cluster_endpoint
}

output "cluster_security_group_id" {
    description = "Security group ids attached to the cluster control plane."
    value       = module.eks.cluster_security_group_id
}

output "kubectl_config" {
    description = "kubectl config as generated by the module."
    value       = module.eks.kubeconfig
}

output "cluster_name" {
    description = "Kubernetes Cluster Name"
    value       = local.cluster_name
}
